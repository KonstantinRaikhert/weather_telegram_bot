import logging
import datetime, pytz

from telegram import ParseMode, Update
from telegram.ext import CallbackContext
from telegram.ext.conversationhandler import ConversationHandler
from telegram.replykeyboardremove import ReplyKeyboardRemove

from keyboard import *
from mongo import *
from utility import GREETING
from weather import get_geolocation_from_yandex, weather_now_formating

# weather = {
#     'condition': '–û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ üå•',
#     'daytime': '—Å–µ–≤–µ—Ä–Ω—ã–π',
#     'feels_like': -7,
#     'humidity': 80,
#     'icon': 'bkn_n',
#     'obs_time': 1616180400,
#     'polar': False,
#     'pressure_mm': 745,
#     'pressure_pa': 993,
#     'season': 'spring',
#     'temp': -3,
#     'wind_dir': '—Å–µ–≤–µ—Ä–Ω—ã–π',
#     'wind_gust': 5.4,
#     'wind_speed': 2
# }


file_log = logging.FileHandler('bot.log')
console_out = logging.StreamHandler()
logging.basicConfig(
    handlers=(file_log, console_out),
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
)


def start(update: Update, _: CallbackContext):
    user = search_or_save_user(
        db, update.effective_user, update.effective_message
    )
    text = (
        '{} {}!\n'
        '\n'
        '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è\n'
        '—è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É\n'
        '–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –¥–µ–Ω—å –∏ –Ω–æ—á—å.\n'
        '–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å\n'
        '—Ç–µ–∫—É—â–∏–π –≥–æ—Ä–æ–¥ –∏ –≤—Ä–µ–º—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è.'
        ''.format(GREETING, user['first_name'])
    )
    update.message.reply_text(text,
        reply_markup=basic_keyboard()
    )

# –†–µ–∞–ª–∏–∑–∞—Ü–∏—è API https://timezonedb.com/references/get-time-zone
# –°–æ—Ö—Ä–∞–Ω–µ–Ω–µ–Ω–∏–µ –∏ –≤—ã–∑–æ–≤ –∏–∑ –ë–î –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ
def get_geolocation(update: Update, context: CallbackContext):
    hour = 23
    minute = 53
    tzinfo = pytz.timezone('Europe/Moscow')
    text = (
        '–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è\n'
        '–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –í–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è'
    )
    update.message.reply_text(text, reply_markup=geolocation_keyboard())
    context.job_queue.run_daily(
        send_weather_in_due_time,
        context=update.message.chat_id,
        time=datetime.time(
            hour=hour, minute=minute, tzinfo=tzinfo
        )
    )


# –†–µ–∞–ª–∏–∑–∞—Ü–∏—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —á–∞—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

def save_geolocation(update: Update, _: CallbackContext):
    coordinates = update.message.location
    coordinates_for_ya = (
        str(coordinates['longitude']) + ',' + str(coordinates['latitude'])
    )
    user = search_or_save_user(
        db, update.effective_user, update.effective_message
    )
    location = get_geolocation_from_yandex(
        coordinates_for_ya
    )['metaDataProperty']['GeocoderMetaData']['text']
    save_user_geolocation(db, user, coordinates, location)
    text = (
        '–ì–æ—Ç–æ–≤–æ {}. –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è:\n'
        '{}'.format(user['first_name'], user['location'])
    )
    update.message.reply_text(text, reply_markup=basic_keyboard())

def change_city(update: Update, _: CallbackContext):
    text = (
        '–ù–∞–ø–∏—à–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –∏ –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç.\n'
        '–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω—É.'
    )
    update.message.reply_text(text, reply_markup=ReplyKeyboardRemove())
    return 'location'


def save_city(update: Update, _: CallbackContext):
    _._user_data['location'] = update.message.text
    user = search_or_save_user(
        db, update.effective_user, update.effective_message
    )
    location_for_ya = get_geolocation_from_yandex(_._user_data['location'])
    user_coord = {
        'longitude': float((location_for_ya['Point']['pos']).split()[0]),
        'latitude': float((location_for_ya['Point']['pos']).split()[1]),
    }
    location = location_for_ya['metaDataProperty']['GeocoderMetaData']['text']
    save_user_geolocation(db, user, user_coord, location)
    user = search_or_save_user(
        db, update.effective_user, update.effective_message
    )
    text = (
        '–ì–æ—Ç–æ–≤–æ {}. –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è:\n'
        '{}'.format(user['first_name'], user['location'])
    )
    update.message.reply_text(text, reply_markup=basic_keyboard())
    return ConversationHandler.END


def default_answer(update: Update, context: CallbackContext):
    text = (
        '–Ø –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –º–µ–Ω—è —Å–∫–æ—Ä–æ –Ω–∞—É—á–∞—Ç. üòé'
    )
    update.message.reply_text(text, reply_markup=basic_keyboard())


def get_settings(update: Update, _: CallbackContext):
    text = (
        '–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ—ë –º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ.\n'
        '–ê –µ—Å–ª–∏ –í–∞–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–∞–∫ —è –∫ –í–∞–º\n'
        '–æ–±—Ä–∞—â–∞—é—Å—å, —Å–º–µ–Ω–∏—Ç–µ –∏–º—è. üëª'
    )
    update.message.reply_text(text, reply_markup=settings_keyboard())


def change_name(update: Update, _: CallbackContext):
    text = '–ö–∞–∫ –∏–∑–≤–æ–ª–∏—Ç–µ –≤–µ–ª–∏—á–∞—Ç—å?'
    update.message.reply_text(text, reply_markup=ReplyKeyboardRemove())
    return 'first_name'


def save_new_name(update: Update, _: CallbackContext):
    _.user_data['first_name'] = update.message.text
    save_user_name(db, update.effective_user, _.user_data)
    user = search_or_save_user(
        db, update.effective_user, update.effective_message
    )
    text = '–¢–µ–ø–µ—Ä—å –í—ã –¥–ª—è –º–µ–Ω—è {}'.format(user['first_name'])
    update.message.reply_text(text, reply_markup=basic_keyboard())
    return ConversationHandler.END


def dont_know(update: Update, _: CallbackContext):
    text = (
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –Ω—É–∂–Ω–æ –º–Ω–µ –Ω–∏—á–µ–≥–æ\n'
        '–ø—Ä—ã—Å—ã–ª–∞—Ç—å. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ—ë –Ω–æ–≤–æ–µ –∏–º—è.'
    )
    update.message.reply_text(text)


def send_weather(update: Update, context: CallbackContext):
    coordinates = get_user_coordinates(db, update.effective_user.id)
    if coordinates == None:
        text = '–î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'
        update.message.reply_text(text, reply_markup=basic_keyboard())
    else:
        text = '''
        <b>–°–µ–π—á–∞—Å –∑–∞ –æ–∫–Ω–æ–º (–Ω—É –∏–ª–∏ –≥–¥–µ —Ç—ã —Ç–∞–º):</b>
        <i>{condition}</i>
        <i>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</i> <b>{temp}¬∞</b>.
        <i>–ê –≤–æ—Ç –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫</i> <b>{feels_like}¬∞</b>.
        <i>–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞</i> <b>{humidity} %</b>.
        <i>–î–∞–≤–ª–µ–Ω–∏–µ</i> <b>{pressure_mm} –º–º. —Ä—Ç. —Å—Ç.</b>
        <i>–í–µ—Ç–µ—Ä</i> <b>{wind_dir}</b>.
        <i>–°–∫–æ—Ä–æ—Å—Ç—å</i> <b>{wind_speed} –º/—Å</b>.
        <i>–ü–æ—Ä—ã–≤—ã</i> <b>{wind_gust} –º/—Å</b>.
        '''.format(**weather_now_formating(coordinates))
        update.message.reply_text(
            text, parse_mode=ParseMode.HTML, reply_markup=basic_keyboard()
        )

# –°–µ–π—á–∞—Å —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–≥–æ–¥–∞, —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 2 —Å–ª–µ–¥ –ø–µ—Ä–∏–æ–¥–∞

def send_weather_in_due_time(context: CallbackContext):
    job = context.job
    coordinates = get_user_coordinates(db, job.context)
    if coordinates == None:
        text = (
            '–£–∫–∞–∂–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ\n'
            '–∏ —Ç–æ–≥–¥–∞ —è —Å–º–æ–≥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–≤–æ–¥–∫–∏ –ø–æ–≥–æ–¥—ã.'
        )
        context.bot.send_message(job.context, text)
    else:
        text = '''
        <b>–°–µ–π—á–∞—Å –∑–∞ –æ–∫–Ω–æ–º (–Ω—É –∏–ª–∏ –≥–¥–µ —Ç—ã —Ç–∞–º):</b>
        <i>{condition}</i>
        <i>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</i> <b>{temp}¬∞</b>.
        <i>–ê –≤–æ—Ç –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫</i> <b>{feels_like}¬∞</b>.
        <i>–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞</i> <b>{humidity} %</b>.
        <i>–î–∞–≤–ª–µ–Ω–∏–µ</i> <b>{pressure_mm} –º–º. —Ä—Ç. —Å—Ç.</b>
        <i>–í–µ—Ç–µ—Ä</i> <b>{wind_dir}</b>.
        <i>–°–∫–æ—Ä–æ—Å—Ç—å</i> <b>{wind_speed} –º/—Å</b>.
        <i>–ü–æ—Ä—ã–≤—ã</i> <b>{wind_gust} –º/—Å</b>.
        '''.format(**weather_now_formating(coordinates))
    context.bot.send_message(job.context, text, parse_mode=ParseMode.HTML)